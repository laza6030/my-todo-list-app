type Query {
    getColumns(workspaceId: String!): [Column]
    getTasksByColumn(columnId: String!): [Task!]
    getWorkspace(userId: String!): [Workspace]!
}

type Mutation {
    createColumn(name: String!, workspaceId: String!): Column!
    deleteColumn(id: String!): Boolean!
    renameColumn(id: String!, name: String!): Boolean!
    createTask(columnId: String!, name: String!): Task
    deleteTask(id: String!): Boolean
    moveTask(taskId: String!, columnId: String!): Task!
    createWorkspace(name: String!, userId: String!): Workspace
    deleteWorkspace(workspaceId: String!): Boolean!
}

type User @key(fields: "id") {
    id: ID!
    defaultWorkspaceId: ID!
}

type Column {
    id: ID!
    name: String!
    workspaceId: ID!
}

type Task {
    id: ID!
    columnId: ID!
    name: String!
}

type Workspace {
    id: ID!
    name: String!
    userId: String!
}
